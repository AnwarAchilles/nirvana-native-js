{"version":3,"file":"nirvana.mjs","sources":["../src/nirvana.core.js","../src/nirvana.mjs"],"sourcesContent":["/**\r\n * The core class for Nirvana.\r\n *\r\n * @class NirvanaCore\r\n */\r\nexport default class NirvanaCore {\r\n  /**\r\n   * The version of Nirvana.\r\n   *\r\n   * @static\r\n   * @type {number}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _version = 3.9;\r\n\r\n  /**\r\n   * The configuration settings for the todo list environment.\r\n   *\r\n   * @static\r\n   * @type {Map<string, string>}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _configure = new Map([\r\n    [\"constant\", \"Nirvana\"],\r\n    [\"separator\", \".\"],\r\n    [\"issueTracking\", false]\r\n  ]);\r\n\r\n  /**\r\n   * The manifest for the todo list data.\r\n   *\r\n   * @static\r\n   * @type {Map<string, string>}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _manifest = new Map();\r\n\r\n  /**\r\n   * The components for the todo list.\r\n   *\r\n   * @static\r\n   * @type {Map<any, any>}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _component = new Map();\r\n\r\n  /**\r\n   * The providers for the todo list.\r\n   *\r\n   * @static\r\n   * @type {Map<any, any>}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _provider = new Map();\r\n\r\n  /**\r\n   * The services for the todo list.\r\n   *\r\n   * @static\r\n   * @type {Map<any, any>}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _service = new Map(Object.entries({\r\n    select: ( selector )=> {\r\n      return document.querySelectorAll(selector);\r\n    },\r\n    protect: ( outputFunction ) => {\r\n      try {\r\n        outputFunction();\r\n      }catch(e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    listen: (condition) => {\r\n      let timeoutId;\r\n      const checkCondition = () => {\r\n        if (!condition()) {\r\n          // If condition is not met, wait and check again\r\n          timeoutId = setTimeout(checkCondition, 10);\r\n        } else {\r\n          // If condition is met, resolve promise\r\n          clearTimeout(timeoutId);\r\n        }\r\n      };\r\n      // Start listening\r\n      checkCondition();\r\n      // Return a promise\r\n      return new Promise((resolve) => {\r\n        resolve();\r\n      });\r\n    },\r\n    inuqueID: (prefix = \"\") => {\r\n      return `${prefix}${Date.now()}${Math.floor(Math.random() * 100000)}`;\r\n    },\r\n    lowercase: (stringText)=> {\r\n      return stringText.toLowerCase();\r\n    },\r\n    uppercase: (stringText)=>  {\r\n      return stringText.toUpperCase();\r\n    },\r\n    capitalize: (stringText)=> {\r\n      return stringText.charAt(0).toUpperCase() + stringText.slice(1);\r\n    }\r\n  }));\r\n\r\n  /**\r\n   * The stores for the todo list.\r\n   *\r\n   * @static\r\n   * @type {Map<any, any>}\r\n   * @memberof NirvanaCore\r\n   */\r\n\r\n  static _store = new Map();\r\n\r\n\r\n  /**\r\n   * Array to store issues.\r\n   *\r\n   * @static\r\n   * @type {Array}\r\n   * @memberof NirvanaCore\r\n   */\r\n  static _issue = new Map();\r\n\r\n}","import Core from \"./nirvana.core\";\r\n\r\n/**\r\n * The `Nirvana` class represents the Nirvana JavaScript environment.\r\n * It provides various methods and features for configuring and managing the environment.\r\n * \r\n * @class Nirvana\r\n */\r\nexport default class Nirvana {\r\n  /**\r\n   * Configures the environment.\r\n   *\r\n   * @param {Object} environment - An object containing key-value pairs to reconfigure the environment\r\n   */\r\n  static environment(environment) {\r\n    window[\"NirvanaListen\"] = new Map();\r\n    \r\n    // Configure if present in the environment object\r\n    if (environment.configure) {\r\n      Core._configure = new Map([...Core._configure, ...Object.entries(environment.configure)]);\r\n    }\r\n\r\n    // Configure provider if present in the environment object\r\n    if (environment.provider) {\r\n      Core._provider = new Map([...Core._provider, ...Object.entries(environment.provider)]);\r\n    }\r\n\r\n    // Configure service if present in the environment object\r\n    if (environment.service) {\r\n      Core._service = new Map([...Core._service, ...Object.entries(environment.service)]);\r\n    }\r\n\r\n    // Set each provider as a property of the Core class\r\n    Core._provider.forEach((provider, name) => {\r\n      this[name] = provider;\r\n    });\r\n\r\n    // Load Service\r\n    Core._service.forEach((Service, name) => {\r\n      if (typeof window[name] === \"function\") {\r\n        console.log(\"Nirvana-Service: \" + name + \"() Already Exists\");\r\n      } else {\r\n        window[name] = Service;\r\n      }\r\n    });\r\n\r\n    // Set the Core object as a property of the global window object\r\n    window[Core._configure.get(\"constant\")] = this;\r\n\r\n    // Set up monitoring if enabled\r\n    if (environment.showMonitor) {\r\n      this.showMonitor = environment.showMonitor;\r\n      this.setupMonitoring();\r\n    }\r\n\r\n    // Start listening for issues\r\n    this.monitoring();\r\n  }\r\n\r\n  /**\r\n   * Set up the monitoring display.\r\n   */\r\n  static setupMonitoring() {\r\n    // Create a div element for the monitoring display\r\n    let elementMonitor = document.createElement(\"div\");\r\n    elementMonitor.style.position = \"fixed\";\r\n    elementMonitor.style.bottom = 0;\r\n    elementMonitor.style.padding = \"2px 5px\";\r\n    elementMonitor.style.maxHeight = \"20%\";\r\n    elementMonitor.style.width = \"100%\";\r\n    elementMonitor.style.overflow = \"auto\";\r\n    elementMonitor.style.fontSize = \"12px\";\r\n    document.body.append(elementMonitor);\r\n\r\n    // Create an unordered list for displaying issues\r\n    let elementIssue = document.createElement(\"ul\");\r\n    elementIssue.setAttribute(\"nv-monitor\", \"issue\");\r\n    elementIssue.innerHTML = \"\";\r\n    elementIssue.style.display = \"flex\";\r\n    elementIssue.style.flexDirection = \"column-reverse\";\r\n    elementIssue.style.bottom = 0;\r\n    elementIssue.style.padding = 0;\r\n    elementIssue.style.listStyleType = \"none\";\r\n    elementIssue.style.margin = 0;\r\n    elementMonitor.append(elementIssue);\r\n  }\r\n\r\n  /**\r\n   * Generates a component and sets it in the Core.Nest registry.\r\n   *\r\n   * @param {string|object} nameOrComponent - The name of the component or an object representing the component.\r\n   * @param {object} component - An optional object representing the nested component.\r\n   * @return {undefined}\r\n   */\r\n  static component(nameOrComponent, component) {\r\n    let nameComponent = \"\";\r\n    let classComponent = {};\r\n\r\n    // Check if a nested component is provided\r\n    if (component) {\r\n      nameComponent = `${nameOrComponent}${Core._configure.get(\"separator\")}${component.name}`;\r\n      classComponent = component;\r\n    } else {\r\n      // If no nested component is provided, use the name of the component object\r\n      nameComponent = nameOrComponent.name;\r\n      classComponent = nameOrComponent;\r\n    }\r\n\r\n    // Check if the component is of type Nirvana and update the component and selector properties\r\n    if (classComponent.__proto__.name === 'Nirvana') {\r\n      classComponent.component = nameComponent;\r\n      classComponent.selector = nameComponent.split(\".\").map(partName => this.selector('component', partName)).join(\" \");\r\n    }\r\n\r\n    // Set the component in the Core.Nest registry\r\n    Core._component.set(nameComponent, classComponent);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set a provider for a given name.\r\n   *\r\n   * @param {string} name - The name of the provider.\r\n   * @param {any} provider - The provider to set.\r\n   * @returns {Class} - The current class instance.\r\n   */\r\n  static provider(name, provider) {\r\n    // Set the provider in the Core provider map\r\n    Core._provider.set(name, provider);\r\n\r\n    // Set the provider as a property of the current class instance\r\n    this[name] = provider;\r\n\r\n    // Return the current class instance\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets a service in the Core service map.\r\n   * (Deprecated)\r\n   */\r\n  static service(service) {\r\n    if (typeof window[service.name] === \"function\") {\r\n      console.log(\"Nirvana-Service: \" + service + \"() Already Exists\");\r\n    } else {\r\n      window[service.name] = service;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stores data in the Core._store map.\r\n   *\r\n   * @param {string} name - The name of the data to be stored.\r\n   * @param {object} data - The data to be stored.\r\n   * @return {Map} The stored data.\r\n   */\r\n  static store(name, data) {\r\n    if (Core._store.has(name)) { // check if the data already exists\r\n      if (data) { // check if new data is provided\r\n        const lastData = Core._store.get(name); // retrieve the existing data\r\n        const newData = new Map(Object.entries(data)); // create a new map from the provided data\r\n        Core._store.set(name, new Map([...lastData, ...newData])); // merge the existing data with the new data and update the map\r\n        return Core._store.get(name); // return the updated data\r\n      } else {\r\n        return Core._store.get(name); // if no new data is provided, return the existing data\r\n      }\r\n    } else {\r\n      if (data) { // check if new data is provided\r\n        Core._store.set(name, new Map(Object.entries(data))); // create a new map from the provided data and store it\r\n        return Core._store.get(name); // return the stored data\r\n      } else {\r\n        Core._store.set(name, new Map()); // if no new data is provided, store an empty map\r\n        return Core._store.get(name); // return the stored data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load a component by name if it exists in the Core's component registry.\r\n   * \r\n   * @param {string} name - The name of the component to load.\r\n   * @returns {object|undefined} - The loaded component or undefined if not found.\r\n   */\r\n  static load(name) {\r\n    if (Core._component.has(name)) {\r\n      const component = Core._component.get(name);\r\n\r\n      /**\r\n       * Create a new instance of the loaded component.\r\n       * \r\n       * @param {object} parameter - An object containing parameters for the component.\r\n       * @returns {object} - The resulting component instance.\r\n       */\r\n      component.instance = (parameter) => {\r\n        return new component({ ...parameter });\r\n      };\r\n\r\n      return component;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Run a component based on certain conditions.\r\n   * \r\n   * @param {string} name - The name of the component.\r\n   * @param {object} parameter - An object containing parameters.\r\n   * @returns {object} - The resulting component instance.\r\n   */\r\n  static run(name, parameter) {\r\n    const component = Core._component.get(name);\r\n    const instanceComponent = new component({ ...parameter });\r\n\r\n    // Check if the component has a 'state' property in its constructor\r\n    if (instanceComponent.constructor.state) {\r\n      return instanceComponent;\r\n    }\r\n\r\n    // Check if the component has a 'component' property\r\n    if (component.component) {\r\n      // Create a CloningComponent with undefined methods\r\n      const CloningComponent = class {};\r\n      const listMethod = Object.getOwnPropertyNames(component.prototype).filter(methodName => typeof instanceComponent[methodName] === 'function');\r\n      listMethod.forEach(methodName => {\r\n        CloningComponent.prototype[methodName] = () => undefined;\r\n      });\r\n      return new CloningComponent();\r\n    }\r\n\r\n    // Return the original component instance\r\n    return instanceComponent;\r\n  }\r\n\r\n  /**\r\n   * Returns an array of elements that match the given prefix and name.\r\n   *\r\n   * @param {string} prefix - The prefix to match elements.\r\n   * @param {string} [name=''] - The name to match elements (optional, default is an empty string).\r\n   * @param {document} parent - The parent elements for start selector.\r\n   * @returns {Array} - An array of elements that match the given prefix and name.\r\n   */\r\n  static element(prefix, name = '', parent = document.querySelector(\"body\")) {\r\n    // Use the selector method to generate a selector string\r\n    const selector = this.selector(prefix, name);\r\n    \r\n    // Use document.querySelectorAll to find all elements that match the selector\r\n    return parent.querySelectorAll(selector);\r\n  }\r\n\r\n  /**\r\n   * Generates a selector based on a prefix and name.\r\n   *\r\n   * @param {string} prefix - The prefix to add to the selector.\r\n   * @param {string} [name=''] - The name to add to the selector. Default is an empty string.\r\n   * @returns {string} The generated selector.\r\n   */\r\n  static selector(prefix, name = '') {\r\n    // Get the lowercase constant value from the configuration\r\n    const constant = Core._configure.get(\"constant\").toLowerCase();\r\n\r\n    // Add the prefix to the selector if it is provided\r\n    const prefixer = prefix ? `-${prefix}` : '';\r\n\r\n    // Generate the selector based on the prefix and name\r\n    const selector = name ? `[${constant}${prefixer}='${name}']` : `[${constant}${prefixer}]`;\r\n\r\n    return selector;\r\n  }\r\n\r\n  /**\r\n   * Adds an issue to the Core issue list or returns the entire issue list.\r\n   *\r\n   * @param {string} name - The name of the issue.\r\n   * @param {string} message - The message of the issue.\r\n   * @return {Array} - The entire issue list if no name is provided.\r\n   */\r\n  static issue(name = '', message = '') {\r\n    if (name) {\r\n      Core._issue.set(name, message);\r\n    } else {\r\n      return Core._issue;\r\n    }\r\n    this.monitoring();\r\n  }\r\n\r\n  /**\r\n   * Monitors issues and displays them.\r\n   */\r\n  static monitoring() {\r\n    console.clear();\r\n    if (this.showMonitor) {\r\n      this.element(\"monitor\", \"issue\").item(0).innerHTML = `<li>🚀 Nirvana ${Core._version} running ..</li>`;\r\n      Core._issue.forEach((message, name) => {\r\n        let boxIssue = document.createElement(\"li\");\r\n        name = name.split(\":\");\r\n        boxIssue.innerHTML = `${name[0]} ⌬ ${name[1]} 𝄖 ${message}`;\r\n        boxIssue.style.borderTop = \"1px solid rgba(0,0,0,0.1)\";\r\n        this.element(\"monitor\", \"issue\").item(0).append(boxIssue);\r\n      });\r\n      if (this.element(\"monitor\", \"issue\").item(0).querySelector(\"li:nth-child(\" + (Core._issue.size + 1) + \")\")) {\r\n        this.element(\"monitor\", \"issue\").item(0).querySelector(\"li:nth-child(\" + (Core._issue.size + 1) + \")\").style.backgroundColor = \"rgba(100,100,100,0.1)\";\r\n      }\r\n    } else {\r\n      console.debug(`🚀 Nirvana ${Core._version} running ..`);\r\n      Core._issue.forEach((message, name) => {\r\n        name = name.split(\":\");\r\n        console.debug(`${name[0]} ⌬ ${name[1]} 𝄖 ${message}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The selected element in the DOM.\r\n   *\r\n   * @type {Element}\r\n   */\r\n  element = document.querySelector(\"body\");\r\n\r\n  /**\r\n   * Constructs a new instance of the class.\r\n   */\r\n  constructor() {\r\n    if (this.element.querySelector(this.constructor.selector)) {\r\n      this.constructor.state = true;\r\n      this.element = this.element.querySelector(this.constructor.selector);\r\n    } else {\r\n      Nirvana.issue(\"Component:\" + this.constructor.name, `Element Not Found\r\n        add attribute \"${this.constructor.selector}\" to element\r\n      `);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects elements from the DOM based on the given selector.\r\n   *\r\n   * @param {string} selector - The CSS selector used to select elements.\r\n   * @return {NodeList} - A list of elements that match the selector.\r\n   */\r\n  select(selector) {\r\n    return this.element.querySelectorAll(selector);\r\n  }\r\n}\r\n"],"names":["Core"],"mappings":"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"}